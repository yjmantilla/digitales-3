;Programa para ser analizado.
;En el supermercado La Rebaja, el valor de los diferentes artículos oscila entre $0 y $25500; 
;pero para su contabilidad, los valores unitarios se asignan en puntos de 0 a 255. 
;Una máquina lectora del código de barras, conectada al puerto B del MCU, 
;va leyendo los valores de los artículos a medida que son vendidos y los va entregando uno a uno
;a dicho puerto. El sistema MCU basado en el JM60 y programado en lenguaje ensamblador 
;lleva a cabo varias estadísticas, con los valores de los primeros 200 artículos vendidos 
;durante el día.

           		 INCLUDE 'derivative.inc'     
           		 XDEF _Startup
            	 ABSENTRY _Startup


               	 ORG    Z_RAMStart
Contador1:       	DS.B   1           ; Contador
Contador2:        	DS.B   1 
Contador3:       	DS.B   1
Contador4:       	DS.B   1
Num_Articulos:    	DS.B   1
Excellent:        	DS.B   1
Regular:          	DS.B   1
; Sección para definir variables en memoria RAM, por fuera de la página cero
;
            	ORG    RAMStart

; Sección de código del programa. 
		ORG   ROMStart   ; $1960
 _Startup:
		; Apagar WatchDOG
		LDA   #$20
		STA   SOPT1
		; Llevar el SP a la última posición de la RAM
		LDHX 		#RAMEnd+1
		TXS 		; Limpiar Registros
		CLRA
		CLRX
		CLRH
		CLR Contador1
		CLR Contador2
		CLR Contador3
       	CLR Contador4
		MOV #7, Num_Articulos 
		CLR Excellent
        CLR Regular
		MOV #$00,PTAD
		MOV #$FF,PTADD
		MOV #$00,PTBD
		MOV #$00, PTBDD
		MOV #$00,PTCD
		MOV #$FF, PTCDD
		MOV #$00,PTDD
		MOV #$FF, PTDDD
		MOV #$00,PTED
		MOV #$FF, PTEDD
		MOV #$00,PTFD
		MOV #$FF, PTFDD
		MOV #$00,PTGD
		MOV #$00, PTGDD    ; entrada
; Cuerpo del programa

        LDHX  #$00B7  ; H <----00 y X <----- B7
again:  BRCLR 0,PTGD,capture  ; push button in  PTGD0 line
       	BRA again
capture: MOV   PTBD, X+ ; cada que se almacena un dato se actualiza H:X
		DBNZ  Num_Articulos, again
		LDHX #$B7
		MOV #7 , Num_Articulos ; 
otra_vez:LDA    ,X
		CMP    #200 ; 200 valor del artículo
        BHS    siga_1
        CMP    #100
        BHI    siga_2
       	CMP    #50
		BHS    siga_3
		CMP    #10
        BNE    Final
        INC    Contador4
        BRA Final
             
siga_1:  INC Contador1
         BRA Final 
siga_2:  INC Contador2
         BRA Final
siga_3:  INC Contador3 
         BRA Final 
Final:   INCX
         DBNZ Num_Articulos , otra_vez
                                
         LDA Contador1
         CMP #50   
         BHS siga_4
         MOV #1, Regular
         LDHX Mensaje_2
         BRA to_display
siga_4:  MOV #1, Excellent
         LDHX  Mensaje_1  

to_display: 	MOV #$FF, PTBDD
            	MOV Contador1, PTAD
          	 	MOV Contador2, PTBD
           	MOV Contador3, PTCD
           	MOV Contador4, PTDD
            	MOV Excellent,   PTED
            	MOV Regular,    PTFD

Here:       	BRA  Here
Mensaje_1       DC.B "     Venta excelente    "
Mensaje_2       DC.B "Venta Regular"


;*                 Interrupt Vectors                          *
;**************************************************************
            	ORG	$FFFE
		DC.W  _Startup			; Reset

; ********************************************
; Preguntas sobre el programa:
;1. Que estadísticas llevan las variables Contador1, 
; Contador2, Contador3, Contador4, Excellent ?
; 2.Antes de analizar los articulos vendidos, su valor es
; almacenado a partir de la dirección $00B7. Porque se hizo 
;esto? se pueden almacenar todos los valores de los artículos 
;vendidos en la página cero? Si no se puede, de opiniones de lo 
;que debería hacerse. No se pide que reprograme, simplemente que 
; detecte el problema.
; Cual es la función de la cadena de caracteres almacenada en la 
; dirección  Mensaje_1? Mensaje_2? 
